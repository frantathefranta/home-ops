{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:recommended',
    'docker:enableMajor',
    ':disableRateLimiting',
    ':dependencyDashboard',
    ':semanticCommits',
    ':automergeBranch',
    ':timezone(America/Detroit)',
    'helpers:pinGitHubActionDigests',
    'github>frantathefranta/home-ops//.github/renovate/grafanaDashboards.json5',
    'github>frantathefranta/home-ops//.github/renovate/autoMerge.json5',
    'github>frantathefranta/home-ops//.github/renovate/semanticCommits.json5',
    'github>frantathefranta/home-ops//.github/renovate/commitMessage.json5',
    'github>frantathefranta/home-ops//.github/renovate/allowedVersions.json5',
    'github>frantathefranta/home-ops//.github/renovate/groups.json5',
  ],
  dependencyDashboard: true,
  dependencyDashboardTitle: 'Renovate Dashboard ðŸ¤–',
  suppressNotifications: [
    'prEditedNotification',
    'prIgnoreNotification',
  ],
  rebaseWhen: 'conflicted',
  assigneesFromCodeOwners: true,
  reviewersFromCodeOwners: true,
  ignorePaths: [
    '**/*.sops.*',
    '**/resources/**',
    '**/docs/**',
  ],
  flux: {
    managerFilePatterns: [
      '/(^|/)kubernetes/.+\\.ya?ml(?:\\.j2)?$/',
    ],
  },
  'helm-values': {
    managerFilePatterns: [
      '/(^|/)kubernetes/.+\\.ya?ml(?:\\.j2)?$/',
    ],
  },
  helmfile: {
    managerFilePatterns: [
      '/(^|/)helmfile\\.ya?ml(?:\\.j2)?$/',
    ],
  },
  kubernetes: {
    managerFilePatterns: [
      '/(^|/)kubernetes/.+\\.ya?ml(?:\\.j2)?$/',
    ],
  },
  kustomize: {
    managerFilePatterns: [
      '/(^|/)kustomization\\.ya?ml(?:\\.j2)?$/',
    ],
  },
  commitMessageTopic: '{{depName}}',
  commitMessageExtra: 'to {{newVersion}}',
  commitMessageSuffix: '',
  packageRules: [
    {
      description: [
        'Custom versioning for minio',
      ],
      matchDatasources: [
        'docker',
      ],
      versioning: 'regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z$',
      matchPackageNames: [
        '/minio/',
      ],
    },
    {
      description: [
        'Custom versioning for miniflux',
      ],
      matchDatasources: [
        'docker',
      ],
      versioning: 'regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>)$',
      matchPackageNames: [
        '/miniflux/',
      ],
    },
    {
      description: [
        'Talos Group',
      ],
      groupName: 'Talos',
      matchDatasources: [
        'docker',
      ],
      group: {
        commitMessageTopic: '{{{groupName}}} group',
      },
      separateMinorPatch: true,
      matchPackageNames: [
        '/siderolabs/talosctl/',
        '/siderolabs/installer/',
        '/factory.talos.dev/installer/',
      ],
    },
    {
      matchUpdateTypes: [
        'major',
      ],
      labels: [
        'type/major',
      ],
    },
    {
      matchUpdateTypes: [
        'minor',
      ],
      labels: [
        'type/minor',
      ],
    },
    {
      matchUpdateTypes: [
        'patch',
      ],
      labels: [
        'type/patch',
      ],
    },
    {
      matchDatasources: [
        'docker',
      ],
      addLabels: [
        'renovate/container',
      ],
    },
    {
      matchDatasources: [
        'helm',
      ],
      addLabels: [
        'renovate/helm',
      ],
    },
    {
      matchDatasources: [
        'github-releases',
        'github-tags',
      ],
      addLabels: [
        'renovate/github-release',
      ],
    },
    {
      matchManagers: [
        'github-actions',
      ],
      addLabels: [
        'renovate/github-action',
      ],
    },
  ],
  customManagers: [
    {
      customType: 'regex',
      description: [
        'Process custom dependencies',
      ],
      managerFilePatterns: [
        '/(^|/).taskfiles/.+\\.ya?ml$/',
        '/(^|/)kubernetes/.+\\.ya?ml(?:\\.j2)?$/',
      ],
      matchStrings: [
        'datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( repository=(?<registryUrl>\\S+))?\\n.+: (&\\S+\\s)?(?<currentValue>\\S+)',
        'datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)\\n.+/(?<currentValue>(v|\\d)[^/]+)',
      ],
      datasourceTemplate: '{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}',
    },
  ],
}
