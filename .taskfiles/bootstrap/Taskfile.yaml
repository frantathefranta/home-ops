---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  talos:
    desc: Bootstrap Talos
    vars:
      TALOS_CONTROLLER:
        sh: talosctl config info --output json | jq --raw-output '.endpoints[]' | shuf -n 1
    preconditions:
      - which jq minijinja-cli sops talosctl
      - test -f "${TALOSCONFIG}"
      - talosctl config info
    cmds:
      - task: :talos:apply-clusterconfig
        vars:
          INSECURE: "true"
      - until talosctl --nodes {{.TALOS_CONTROLLER}} bootstrap; do sleep 5; done
      - talosctl kubeconfig --nodes {{.TALOS_CONTROLLER}} --force --force-context-name "talos-maxi" "${KUBECONFIG}"

  apps:
    env:
      AKEYLESS_ACCESS_ID:
        sh: akeyless get-secret-value --name bootstrap/external-secrets --jq-expression '.AKEYLESS_ACCESS_ID'
      AKEYLESS_ACCESS_TYPE:
        sh: akeyless get-secret-value --name bootstrap/external-secrets --jq-expression '.AKEYLESS_ACCESS_TYPE'
      AKEYLESS_ACCESS_TYPE_PARAM:
        sh: akeyless get-secret-value --name bootstrap/external-secrets --jq-expression '.AKEYLESS_ACCESS_TYPE_PARAM'
      TLS_CRT:
        sh: akeyless get-secret-value --name talos-maxi-cluster-tls --jq-expression '."tls.crt"'
      TLS_KEY:
        sh: akeyless get-secret-value --name talos-maxi-cluster-tls --jq-expression '."tls.key"'
      FLUX_SOPS_PRIVATE_KEY:
        sh: akeyless get-secret-value --name age-key
      GITHUB_APP_ID:
        sh: akeyless get-secret-value --name github --jq-expression '."GITHUB_APP_ID"'
      GITHUB_APP_INSTALLATION_ID:
        sh: akeyless get-secret-value --name github --jq-expression '."GITHUB_APP_INSTALLATION_ID"'
      GITHUB_APP_PRIVATE_KEY:
        sh: akeyless get-secret-value --name github --jq-expression '."GITHUB_APP_PRIVATE_KEY_B64"'
    desc: Bootstrap Apps
    prompt: Bootstrap apps into Talos cluster?
    preconditions:
      - which akeyless helmfile kubectl
      - test -f "${TALOSCONFIG}"
      - test -f {{.BOOTSTRAP_DIR}}/helmfile.yaml
      - test -f {{.BOOTSTRAP_DIR}}/templates/resources.yaml.j2
      - akeyless get-secret-value --name bootstrap/external-secrets
      - talosctl config info
    cmds:
      - until kubectl wait nodes --for=condition=Ready=False --all --timeout=10m; do sleep 5; done
      - minijinja-cli {{.BOOTSTRAP_DIR}}/templates/resources.yaml.j2 | kubectl apply --server-side --filename -
      - helmfile --quiet --file {{.BOOTSTRAP_DIR}}/helmfile.yaml apply --skip-diff-on-install --suppress-diff
