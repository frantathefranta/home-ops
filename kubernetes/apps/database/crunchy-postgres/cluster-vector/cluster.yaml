---
# yaml-language-server: $schema=https://lds-schemas.pages.dev/postgres-operator.crunchydata.com/postgrescluster_v1beta1.json
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name postgres-vector
  labels:
    crunchy-users.henrywhitaker3.github.com/watch: "true"
  annotations:
    crunchy-users.henrywhitaker3.github.com/superuser: "postgres"
    crunchy-users.henrywhitaker3.github.com/extensions: |
      [
        {
          "database": "immich_db",
          "extension": "vectors"
        },
        {
          "database": "immich_db",
          "extension": "earthdistance",
          "cascade": true
        }
      ]
spec:
  postgresVersion: 16
  image: ghcr.io/budimanjojo/cdpgvecto.rs:16@sha256:81732e18125371bbbf965caa5cb367b45f43f6f8c60102675a821981987007b7
  instances:
    - name: postgres-vector
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-vector
      replicas: &replica 1
      dataVolumeClaimSpec:
        storageClassName: openebs-hostpath
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
      walVolumeClaimSpec:
        storageClassName: openebs-hostpath
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/data: postgres-vector
  patroni:
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        synchronous_commit: "on"
        parameters:
          max_connections: 500
          shared_preload_libraries: "vectors.so"
          search_path: '"$user", public, vectors"'
        pg_hba:
          - hostssl all all all md5
          - hostnossl all all 10.69.0.0/16 md5
  users:
    # Superuser
    - name: postgres
      databases: ["postgres"]
      options: SUPERUSER
      password: &password
        type: AlphaNumeric
    # Applications
    - name: immich
      databases: ["immich_db"]
      options: SUPERUSER
      password: *password
  backups:
    pgbackrest:
      configuration: &backupConfig
        - secret:
            name: crunchy-pgo-vector-secret
      global: &backupFlag
        compress-type: lz4
        compress-level: "9"
        archive-push-queue-max: 4GiB
        # PVC
        repo1-retention-full: "14" # days
        repo1-retention-full-type: "time"
        # R2
        repo2-block: "y"
        repo2-bundle: "y"
        repo2-path: "/pgdata/crunchy-pgo-vector"
        repo2-retention-full-type: "time"
        repo2-retention-full: "7"
        # repo2-cipher-type: "aes-256-cbc"
        repo2-s3-uri-style: "path"
        # Minio
        repo3-bundle: "y"
        repo3-block: "y"
        repo3-retention-full-type: time
        repo3-retention-full: "30"
        repo3-path: "/pgdata/crunchy-pgo-vector"
        repo3-s3-uri-style: path
        # RGW
        # repo4-bundle: "y"
        # repo4-block: "y"
        # repo4-retention-full-type: time
        # repo4-retention-full: "30"
        # repo4-storage-verify-tls: "n"
        # repo4-path: "/pgdata/pgo-vector"
        # repo4-s3-uri-style: path
        # repo4-storage-port: "7480"
      manual:
        repoName: repo1
        options: ["--type=full"]
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-vector-backup
      repos:
        - name: repo1
          volume: &nfs
            volumeClaimSpec:
              storageClassName: nfs-slow #csi-driver-nfs
              volumeName: postgres-vector-nfs
              accessModes: ["ReadWriteMany"]
              resources:
                requests:
                  storage: 1Mi
          schedules:
            full: "30 1 * * 0" # Sunday at 01:30
            differential: "30 1 * * 1-6" # Mon-Sat at 01:30
            incremental: "30 3-23 * * *" # Every hour except 01:30-2:30
        - name: repo2
          s3: &r2
            bucket: crunchy-pgo
            endpoint: ${R2_ENDPOINT}
            region: us-east-1 #https://developers.cloudflare.com/r2/api/s3/api/#bucket-region
          schedules:
            full: "30 2 * * 0" # Sunday at 2am
            differential: "30 2 * * 1-6" # Mon-Sat at 2am
         # RGW
        - name: repo3
          s3: &minio
            bucket: postgresql-maxi
            endpoint: s3.franta.us
            region: us-east-1
          schedules:
            full: "10 1 * * 0" # Sunday at 1am
            differential: "10 1 * * 1-6" # Mon-Sat at 1am
            incremental: "10 3-23 * * *" # Every hour except 1-2am
        # - name: repo4
        #   s3: &rgw
        #     bucket: postgresql
        #     endpoint: haproxy-rados-gw.rook-ceph-external.svc.cluster.local
        #     region: us-east-1
        #   schedules:
        #     full: "15 1 * * 0"           # Sunday at 1am
        #     differential: "15 1 * * 1-6" # Mon-Sat at 1am
        #     incremental: "15 3-23 * * *" # Every hour except 1-2am
      jobs:
        ttlSecondsAfterFinished: 600
  dataSource:
    pgbackrest:
      stanza: db
      configuration: *backupConfig
      global: *backupFlag
      repo:
        name: repo3
        s3: *minio
  # service:
  #   type: LoadBalancer
  #   metadata:
  #     annotations:
  #       external-dns.alpha.kubernetes.io/hostname: cpgo-vector.franta.us
  monitoring:
    pgmonitor:
      exporter:
        resources:
          requests:
            cpu: 10m
            memory: 64M
          limits:
            memory: 512M
  # proxy:
  #   pgBouncer:
  #     port: 5432
  #     replicas: *replica
  #     metadata:
  #       labels:
  #         app.kubernetes.io/name: crunchy-postgres-vector-pgbouncer
  #     config:
  #       global:
  #         pool_mode: transaction
  #         client_tls_sslmode: prefer
  #         default_pool_size: "100"
  #         max_client_conn: "500"
  #     topologySpreadConstraints:
  #       - maxSkew: 1
  #         topologyKey: topology.kubernetes.io/zone
  #         whenUnsatisfiable: DoNotSchedule
  #         labelSelector:
  #           matchLabels:
  #             postgres-operator.crunchydata.com/cluster: *name
  #             postgres-operator.crunchydata.com/role: pgbouncer-vector
