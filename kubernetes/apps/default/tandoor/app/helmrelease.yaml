---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app tandoor
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      tandoor:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/tandoorrecipes/recipes
              tag: 2.2.4@sha256:7407993444839441071be5214f7876c75d33b04f7b9c17ab7d263d7c98c98fe0
            env:
              TZ: America/Detroit
              DEBUG: 0
              ALLOWED_HOSTS: "*"
              DB_ENGINE: django.db.backends.postgresql
              # Postgres
              POSTGRES_HOST: tandoor-pgbouncer.default.svc
              POSTGRES_PORT: 5432
              POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: tandoor-pguser-recipes
                    key: user
              POSTGRES_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: tandoor-pguser-recipes
                    key: password
              POSTGRES_DB:
                valueFrom:
                  secretKeyRef:
                    name: tandoor-pguser-recipes
                    key: dbname
              DEFAULT_FROM_EMAIL: recipes@franta.dev
              GUNICORN_MEDIA: 0
              REMOTE_USER_AUTH: 0
              FRACTION_PREF_DEFAULT: 0
              COMMENT_PREF_DEFAULT: 1
              SHOPPING_MIN_AUTOSYNC_INTERVAL: 5
              ENABLE_SIGNUP: 0
              EMAIL_HOST: smtp-relay.default.svc.cluster.local
              EMAIL_PORT: 25
              SOCIAL_PROVIDERS: allauth.socialaccount.providers.openid_connect
            envFrom:
              - secretRef:
                  name: tandoor-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /accounts/login/
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /accounts/login/
                    port: *port
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              requests:
                cpu: 10m
                memory: 256M
              limits:
                memory: 1Gi
    service:
      app:
        controller: *app
        ipFamilyPolicy: RequireDualStack
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
          - recipes.franta.us
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /opt/recipes/mediafiles
            subPath: mediafiles
          - path: /opt/recipes/staticfiles
            subPath: staticfiles
      temp:
        type: emptyDir
        globalMounts:
          - path: /tmp
            subPath: app-tmp
          - path: /opt/recipes/cookbook/static/django_js_reverse
            subPath: django_js_reverse
