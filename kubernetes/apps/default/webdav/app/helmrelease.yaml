---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app webdav
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      webdav:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/hacdias/webdav
              tag: v5.7.5@sha256:b085b0db9521fb51dbc3562d090b9489b80592caf59a3bd164b39d69d730b5c3
            args:
              - -c
              - /config/config.yaml
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
          nginx:
            image:
              repository: ghcr.io/nginxinc/nginx-unprivileged
              tag: 1.27.4
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ipFamilyPolicy: RequireDualStack
        ports:
          http:
            port: &port 8080
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.franta.us"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
    persistence:
      data:
        existingClaim: *app
      config:
        type: secret
        name: *app
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
      nginx-config:
        type: configMap
        name: webdav-nginx-configmap
        advancedMounts:
          webdav:
            nginx:
              - path: /etc/nginx/nginx.conf
                subPath: nginx-config
                readOnly: true
