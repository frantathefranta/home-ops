---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app music-assistant
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system

  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph-external
  values:
    controllers:
      music-assistant:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          annotations:
            k8s.v1.cni.cncf.io/networks: |
              [{
                "name":"multus-vf-iot",
                "namespace": "network",
                "ips": ["10.0.50.212/24"],
                "mac": "10:62:e5:18:1a:31"
              }]
        containers:
          app:
            image:
              repository: ghcr.io/music-assistant/server
              tag: 2.5.4@sha256:d6fd6085583e6df9490874cf626ca43cb06e381f6a47b7361d03719bb32c4e46
            env:
              TZ: America/Detroit
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    defaultPodOptions:
      # nodeSelector:
      #   kubernetes.io/hostname: talos-g3-mini
      # tolerations:
      #   - key: special
      #     operator: Exists
      #     effect: NoSchedule
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 8095

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.franta.us"
          - mass.franta.us
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /data
      music:
        type: nfs
        server: ${NAS_IP}
        path: /emc1/music
        globalMounts:
          - path: /music
