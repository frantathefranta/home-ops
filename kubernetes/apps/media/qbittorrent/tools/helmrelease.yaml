---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: qbtools
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  interval: 15m
  timeout: 5m
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: qbittorrent
      namespace: media
  values:
    controllers:
      tagging:
        type: cronjob
        cronjob: &cronJobSpec
          schedule: "@hourly"
          timeZone: &timeZone America/Detroit
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
        initContainers:
          tagging: &image
            image:
              repository: ghcr.io/buroa/qbtools # TODO: Migrate to tqm
              # https://github.com/autobrr/tqm
              # https://github.com/buroa/k8s-gitops/tree/main/kubernetes/apps/media/tqm
              tag: v0.21.2@sha256:33da584c9d71bb2d8b9931995c41599bef1fdebf52cf5408cdd09175069f299a
            env: &env
              TZ: *timeZone
              POD_NAMESPACE:
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
            args:
              [
                "tagging",
                "--added-on",
                "--expired",
                "--last-activity",
                "--sites",
                "--unregistered",
                "--server",
                "qbittorrent.$(POD_NAMESPACE).svc.cluster.local",
                "--port",
                "8080",
                "--config",
                "/config/config.yaml",
              ]
            resources: &resources
              requests:
                cpu: 25m
              limits:
                memory: 256M
        containers:
          unregistered:
            <<: *image
            env: *env
            args:
              [
                "prune",
                "--include-tag",
                "unregistered",
                "--server",
                "qbittorrent.$(POD_NAMESPACE).svc.cluster.local",
                "--port",
                "8080",
              ]
            resources: *resources
          expired:
            <<: *image
            env: *env
            args: [
                "prune",
                "--include-category",
                "remove",
                "--include-tag",
                "expired", # defined in config.yaml
                "--exclude-tag",
                "activity:24h",
                # "--dry-run",
                "--server",
                "qbittorrent.$(POD_NAMESPACE).svc.cluster.local",
                "--port",
                "8080",
              ]
            resources: *resources
        pod:
          restartPolicy: OnFailure
      orphaned:
        type: cronjob
        cronjob:
          <<: *cronJobSpec
          schedule: "@daily"
        containers:
          app:
            <<: *image
            args:
              - orphaned
              - --exclude-pattern="*/manual/*"
              - --server=qbittorrent.$(POD_NAMESPACE).svc.cluster.local
              - --port=8080
        pod:
          restartPolicy: OnFailure
          securityContext:
            # <<: *podSecurityContext
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 1003
            fsGroup: 1003
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 1003
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        seccompProfile: { type: RuntimeDefault }
    persistence:
      secret-file:
        type: secret
        name: qbtools-secret # overriden by kustomizeconfig
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
      media:
        enabled: true
        type: nfs
        path: /emc1/media
        server: ${NAS_IP}
        advancedMounts:
          orphaned:
            app:
              - path: /media/downloads
                subPath: downloads/
