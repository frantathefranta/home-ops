---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: grafana
  namespace: observability
spec:
  interval: 1h
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 8.14.1
  url: oci://ghcr.io/grafana/helm-charts/grafana
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app grafana
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: grafana
    namespace: observability
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    replicas: ${REPLICAS:=1}
    podAnnotations:
      reloader.stakater.com/auto: "true"
    deploymentStrategy:
      type: RollingUpdate
    service:
      ipFamilyPolicy: PreferDualStack
    admin:
      existingSecret: grafana-secret
    env:
      GF_AUTH_GENERIC_OAUTH_API_URL: https://auth.franta.us/api/oidc/userinfo
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://auth.franta.us/api/oidc/authorization
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://auth.franta.us/api/oidc/token
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SERVER_ROOT_URL: https://grafana.franta.us
      GF_SECURITY_COOKIE_SAMESITE: *app
      # Postgres
      GF_DATABASE_USER: *app
      GF_DATABASE_HOST: grafana-pgbouncer.observability.svc
      GF_DATABASE_NAME: *app
      GF_DATABASE_SSL_MODE: 'require'
      GF_DATABASE_TYPE: postgres
    envValueFrom:
      GF_DATABASE_PASSWORD:
        secretKeyRef:
          name: grafana-pguser-grafana
          key: password
    envFromSecrets:
      - name: grafana-secret
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth:
        signout_redirect_url: "https://auth.franta.us/logout"
        oauth_auto_login: true
        oauth_allow_insecure_email_lookup: true
      auth.anonymous:
        enabled: true
        org_id: 1
        org_name: Main Org.
        org_role: Viewer
      auth.generic_oauth:
        enabled: true
        name: Authelia
        icon: signin
        scopes: "openid profile email groups"
        empty_scopes: false
        login_attribute_path: preferred_username
        groups_attribute_path: groups
        name_attribute_path: name
        use_pkce: true
      auth.generic_oauth.group_mapping:
        org_id: 1
        role_attribute_path: |
          contains(groups[*], 'admins') && 'Admin' || contains(groups[*], 'people') && 'Viewer'
      news:
        news_feed_enabled: false
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          - { name: Loki, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://prometheus-operated.observability.svc.cluster.local:9090
            jsonData:
              timeInterval: 1m
            isDefault: true
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-headless.observability.svc.cluster.local:3100
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://alertmanager-operated.observability.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: node-monitoring
            orgId: 1
            folder: Node Monitoring
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/node-monitoring
          - name: storage
            orgId: 1
            folder: Storage
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/storage
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: media
            orgId: 1
            folder: Media
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/media
          - name: minecraft
            orgId: 1
            folder: Minecraft
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/minecraft
          - name: network
            orgId: 1
            folder: Network
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/network
          - name: postgres
            orgId: 1
            folder: PostgresQL
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/postgres
          - name: pinchflat
            orgId: 1
            folder: Pinchflat
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/pinchflat
    dashboards:
      default:
        node-feature-discovery:
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
          datasource: Prometheus
        prometheus:
          # renovate: depName="Prometheus"
          gnetId: 19105
          revision: 7
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        emqx:
          # renovate: depName="EMQX"
          gnetId: 17446
          revision: 2
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        dragonfly:
          url: https://raw.githubusercontent.com/dragonflydb/dragonfly/refs/heads/main/tools/local/monitoring/grafana/provisioning/dashboards/dragonfly.json
          datasource: Prometheus
      node-monitoring:
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 40
          datasource: Prometheus
        node-exporter-bsd:
          # renovate: depName="Node Exporter BSD"
          gnetId: 4260
          revision: 15
          datasource: Prometheus
        idrac-dashboard-v2:
          # renovate: depName="iDRAC SNMP DashBoard"
          gnetId: 14395
          revision: 1
          datasource: Prometheus
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Prometheus
      kubernetes:
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 19
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 20
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 43
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 42
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 35
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 36
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      media:
        jellyseerr-exporter:
          url: https://raw.githubusercontent.com/opspotes/jellyseerr-exporter/main/grafana/dashboard.json
          datasource: Prometheus
        qbittorrent-exporter:
          url: https://raw.githubusercontent.com/esanchezm/prometheus-qbittorrent-exporter/master/grafana/dashboard.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        transmission-exporter:
          url: https://raw.githubusercontent.com/metalmatze/transmission-exporter/refs/heads/master/dashboards/dashboard.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        exportarr:
          url: https://raw.githubusercontent.com/onedr0p/exportarr/master/examples/grafana/dashboard2.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        plex-exporter:
          url: https://raw.githubusercontent.com/jsclayton/prometheus-plex-exporter/main/examples/dashboards/Media%20Server.json
          datasource: Prometheus
        miniflux:
          url: https://raw.githubusercontent.com/miniflux/v2/main/contrib/grafana/dashboard.json
          datasource: Prometheus
      minecraft:
        minecraft-players:
          url: https://raw.githubusercontent.com/sladkoff/minecraft-prometheus-exporter/master/dashboards/new/minecraft-player-statistic.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        minecraft-general:
          url: https://raw.githubusercontent.com/sladkoff/minecraft-prometheus-exporter/master/dashboards/new/minecraft.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
      network:
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/overview.json
          datasource: Prometheus
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        nut-exporter:
          url: https://raw.githubusercontent.com/DRuggeri/nut_exporter/master/dashboard/dashboard.json
          datasource: Prometheus
        opnsense:
          # renovate: depName="OPNsense"
          gnetId: 21113
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS-K0, value: Prometheus }
        proxmox:
          # renovate: depName="Proxmox via Prometheus"
          gnetId: 10347
          revision: 5
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        speedtest-exporter:
          # renovate: depName="Speedtest-Exporter Dashboard"
          gnetId: 13665
          revision: 4
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
      storage:
        ceph-cluster:
          # renovate: depName="Ceph Cluster"
          gnetId: 2842
          revision: 18
          datasource: Prometheus
        ceph-osd:
          # renovate: depName="Ceph - OSD (Single)"
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        ceph-pools:
          # renovate: depName="Ceph - Pools"
          gnetId: 5342
          revision: 9
          datasource: Prometheus
        etcd-storage:
          # renovate: depName="etcd"
          gnetId: 22236
          revision: 1
          datasource:
            - { name: DS_VICTORIAMETRICS, value: Prometheus }
        minio:
          # renovate: depName="MinIO Dashboard"
          gnetId: 13502
          revision: 26
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        smart:
          # renovate: depName="Dashboard for smartctl_exporter"
          gnetId: 20204
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        volsync:
          # removate: depNmae="VolSync Dashboard"
          gnetId: 21356
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
            - { name: VAR_REPLICATIONDESTNAME, value: .*-dst }
        zfs:
          # renovate: depName="ZFS"
          gnetId: 7845
          revision: 4
          datasource: Prometheus
      postgres:
        crunchy-pgbackrest:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/pgbackrest.json
          datasource: Prometheus
        crunchy-pod-details:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/pod_details.json
          datasource: Prometheus
        crunchy-postgresql-details:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/postgresql_details.json
          datasource: Prometheus
        crunchy-postgresql-overview:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/postgresql_overview.json
          datasource: Prometheus
        crunchy-postgresql-service_health:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/postgresql_service_health.json
          datasource: Prometheus
        crunchy-prometheus-alerts:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/prometheus_alerts.json
          datasource: Prometheus
        crunchy-query-statistics:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/query_statistics.json
          datasource: Prometheus
      pinchflat:
        application:
          url: https://raw.githubusercontent.com/kieraneglin/pinchflat/refs/heads/master/priv/grafana/application.json
          datasource: Prometheus
        beam:
          url: https://raw.githubusercontent.com/kieraneglin/pinchflat/refs/heads/master/priv/grafana/beam.json
          datasource: Prometheus
        ecto:
          url: https://raw.githubusercontent.com/kieraneglin/pinchflat/refs/heads/master/priv/grafana/ecto.json
          datasource: Prometheus
        oban:
          url: https://raw.githubusercontent.com/kieraneglin/pinchflat/refs/heads/master/priv/grafana/oban.json
          datasource: Prometheus
        phoenix:
          url: https://raw.githubusercontent.com/kieraneglin/pinchflat/refs/heads/master/priv/grafana/phoenix.json
          datasource: Prometheus
        phoenix_live_view:
          url: https://raw.githubusercontent.com/kieraneglin/pinchflat/refs/heads/master/priv/grafana/phoenix_live_view.json
          datasource: Prometheus
    sidecar:
      image:
        registry: ghcr.io
        repository: home-operations/k8s-sidecar
        tag: 1.30.3@sha256:39cca7abcad8f1621b9462d95f7d0e60301b92fcb0ff4de0ad4561859011cddf
      dashboards:
        enabled: true
        searchNamespace: ALL
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    serviceMonitor:
      enabled: true
    route:
      main:
        enabled: true
        hostnames: ["{{ .Release.Name }}.franta.us"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
    persistence:
      enabled: false
    testFramework:
      enabled: false
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: *app
