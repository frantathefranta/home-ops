---
# yaml-language-server: $schema=https://lds-schemas.pages.dev/postgres-operator.crunchydata.com/postgrescluster_v1beta1.json
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name postgres
spec:
  postgresVersion: 16
  monitoring:
    pgmonitor:
      exporter:
        image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres-exporter:ubi8-5.6.0-0
  metadata:
    labels:
      crunchy-userinit.ramblurr.github.com/enabled: "true"
      crunchy-userinit.ramblurr.github.com/superuser: "postgres"
  patroni: # turn on sync writes to at least 1 other replica
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        synchronous_commit: "on"
        pg_hba:
          - hostssl all all all md5
          - hostnossl all all 10.69.0.0/16 md5 # Necessary because of authelia (there might be a workaround though)
        parameters:
          max_connections: 500
  instances:
    - name: postgres
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres
      replicas: &replicas 3
      dataVolumeClaimSpec:
        storageClassName: openebs-hostpath
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 20Gi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/data: postgres
  users:
    # Superuser
    - name: "postgres"
      databases: ["postgres"]
      options: "SUPERUSER"
      password:
        type: AlphaNumeric
    # Applications
    - name: "atuin"
      databases: ["atuin"]
      password:
        type: AlphaNumeric
    - name: "autobrr"
      databases: ["autobrr"]
      password:
        type: AlphaNumeric
    - name: "vikunja"
      databases: ["vikunja"]
      password:
        type: AlphaNumeric
    - name: "authelia"
      databases: ["authelia"]
      password:
        type: AlphaNumeric
    - name: "bazarr"
      databases: ["bazarr"]
      password:
        type: AlphaNumeric
    - name: "lubelog"
      databases: ["lubelog"]
      password:
        type: AlphaNumeric
    - name: "gatus"
      databases: ["gatus"]
      password:
        type: AlphaNumeric
    - name: "grafana"
      databases: ["grafana"]
      password:
        type: AlphaNumeric
    - name: "paperless"
      databases: ["paperless"]
      password:
        type: AlphaNumeric
    - name: "prowlarr"
      databases: ["prowlarr_main", "prowlarr_log"]
      password:
        type: AlphaNumeric
    - name: "radarr"
      databases: ["radarr_main", "radarr_log"]
      password:
        type: AlphaNumeric
    - name: "readarr"
      databases: ["readarr_cache", "readarr_main", "readarr_log"]
      password:
        type: AlphaNumeric
    - name: "sonarr"
      databases: ["sonarr_main", "sonarr_log"]
      password:
        type: AlphaNumeric
  backups:
    pgbackrest:
      configuration: &backupConfig
        - secret:
            name: crunchy-pgo-secret
      global: &backupFlag
        archive-timeout: "60"
        compress-type: bz2
        compress-level: "9"
        delta: "y"
        repo1-bundle: "y"
        repo1-block: "y"
        repo1-path: /pgdata/crunchy-pgo/repo1
        repo1-s3-uri-style: path
        repo1-retention-full-type: time
        repo1-retention-full: "14"
        repo1-retention-diff: "30"
        repo2-bundle: "y"
        repo2-block: "y"
        repo2-path: /pgdata/crunchy-pgo/repo2
        repo2-s3-uri-style: path
        repo2-retention-full-type: time
        repo2-retention-full: "2"
        repo2-retention-diff: "7"
      manual:
        repoName: repo1
        options:
          - --type=full
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-backup
      repos:
        - name: repo1
          s3: &minio
            bucket: postgresql-maxi
            endpoint: s3.franta.us # TODO Change this to minio address inside cluster
            region: us-east-1
          schedules:
            full: "0 1 * * 0" # Sunday at 1am
            differential: "0 1 * * 1-6" # Mon-Sat at 1am
            incremental: "0 3-23 * * *" # Every hour except 1-2am
        - name: repo2
          s3: &r2
            bucket: crunchy-pgo
            endpoint: ${CLUSTER_SECRET_CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com
            region: us-east-1 #https://developers.cloudflare.com/r2/api/s3/api/#bucket-region
          schedules:
            full: "0 2 * * 0" # Sunday at 2am
            differential: "0 2 * * 1-6" # Mon-Sat at 2am
  dataSource:
    pgbackrest:
      stanza: db
      configuration: *backupConfig
      global: *backupFlag
      repo:
        name: repo1
        s3: *minio
  proxy:
    pgBouncer:
      service:
        metadata:
          annotations:
            external-dns.alpha.kubernetes.io/hostname: cpgo-maxi.${SECRET_DOMAIN}
            io.cilium/lb-ipam-ips: ${SVC_CPGO_ADDR:=temp}
        type: LoadBalancer
      port: 5432
      replicas: 3
      config:
        global:
          # Grafana requires session
          # Ref: https://github.com/grafana/grafana/issues/74260
          pool_mode: session
          client_tls_sslmode: prefer
          default_pool_size: "100"
          max_client_conn: "500"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/role: pgbouncer
