---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app bar-assistant
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      bar-assistant:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: barassistant/server
              tag: 4.0.1
            env:
              BASE_URL: https://bar.${SECRET_DOMAIN}
              # MEILISEARCH_URL: https://bar.${SECRET_DOMAIN}/search
              APP_URL: https://bar-api.${SECRET_DOMAIN}
              LOG_CHANNEL: stderr
              MEILISEARCH_HOST: http://meilisearch:7700
              MEILISEARCH_URL: https://bar.${SECRET_DOMAIN}/search
              REDIS_HOST: dragonfly.database.svc.cluster.local
              ALLOW_REGISTRATION: true
            envFrom:
              - secretRef:
                  name: bar-assistant-secret
            # probes:
            #   liveness: &probes
            #     enabled: true
            #     custom: true
            #     spec:
            #       httpGet:
            #         path: /
            #         port: &port 5555
            #       initialDelaySeconds: 0
            #       periodSeconds: 10
            #       timeoutSeconds: 1
            #       failureThreshold: 3
            #   readiness: *probes
            securityContext:
              privileged: true
              # allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              # capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
    # defaultPodOptions:
    #   securityContext:
    #     privileged: true
        # runAsNonRoot: true
        # runAsUser: 33
        # runAsGroup: 33
        # fsGroup: 33
        # fsGroupChangePolicy: OnRootMismatch
        # seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: 8080
    ingress:
      app:
        className: internal
        # annotations:
        #   nginx.ingress.kubernetes.io/rewrite-target: "/"
        #   external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        hosts:
        - host: "bar-api.${SECRET_DOMAIN}"
          paths:
          # - path: /bar(/|$)(.*)
          - path: /
            service:
              identifier: app
              port: http
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /var/www/cocktails/storage/bar-assistant
      cache:
        type: emptyDir
        globalMounts:
          - path: /var/www/cocktails
            subPath: cocktails
      # memory:
      #   type: emptyDir
      #   globalMounts:
      #     - path: /var/cache/nginx
