---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app salt-rim
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      salt-rim:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: barassistant/salt-rim
              tag: 3.0.0
            env:
              API_URL: https://bar.${SECRET_DOMAIN}/bar
              MEILISEARCH_URL: https://bar.${SECRET_DOMAIN}/search
              BAR_NAME: "Cara's Bar"
              DESCRIPTION: "Coolest Bar in Town"
              DEFAULT_LOCALE: en-US
            # probes:
            #   liveness: &probes
            #     enabled: true
            #     custom: true
            #     spec:
            #       httpGet:
            #         path: /
            #         port: &port 5555
            #       initialDelaySeconds: 0
            #       periodSeconds: 10
            #       timeoutSeconds: 1
            #       failureThreshold: 3
            #   readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: 8080
    ingress:
      app:
        className: internal
        # annotations:
        #   external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        hosts:
        - host: "bar.${SECRET_DOMAIN}"
          paths:
          - path: /
            service:
              identifier: app
              port: http
    persistence:
      tmp-nginx:
        type: emptyDir
        globalMounts:
          - path: /var/www
      tmp:
        type: emptyDir
        globalMounts:
          - path: /var/cache
