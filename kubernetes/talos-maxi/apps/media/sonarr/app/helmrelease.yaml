---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
  - name: rook-ceph-cluster
    namespace: rook-ceph-external
  values:
    controllers:
      sonarr:
        labels:
          nfsMount: "true"
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/joryirving/sonarr-develop
              tag: 4.0.12.2892@sha256:3b2c6b1bd8e8ff6cf0c432a96fe76182401272e4208d599a4f6e5bf1a05c35be
            env:
              TZ: America/Detroit
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 80
              SONARR__UPDATE__BRANCH: develop
            envFrom:
            - secretRef:
                name: sonarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          # gethomepage.dev/enabled: "true"
          # gethomepage.dev/group: Downloads
          # gethomepage.dev/name: Sonarr
          # gethomepage.dev/icon: sonarr.png
          # gethomepage.dev/description: TV Downloads
          # gethomepage.dev/widget.type: sonarr
          # gethomepage.dev/widget.url: http://sonarr.downloads
          # gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_SONARR_TOKEN}}` }}"
          # external-dns.alpha.kubernetes.io/target: internal.franta.us
        hosts:
        - host: "{{ .Release.Name }}.franta.us"
          paths:
          - path: /
            service:
              identifier: app
              port: http
    persistence:
      config:
        existingClaim: *app
      tmp:
        type: emptyDir
      data:
        type: nfs
        server: 10.40.1.50
        path: /emc1/media
        globalMounts:
        - path: /media
      jeopardy:
        enabled: true
        type: nfs
        path: /emc1/jeopardy
        server: 10.40.1.50
        globalMounts:
          - path: /jeopardy
