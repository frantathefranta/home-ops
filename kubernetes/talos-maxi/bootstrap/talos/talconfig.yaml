# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
---
# renovate: datasource=docker depName=ghcr.io/siderolabs/installer
talosVersion: v1.9.5
# renovate: datasource=docker depName=ghcr.io/siderolabs/kubelet
kubernetesVersion: v1.32.3

clusterName: &cluster talos-maxi
endpoint: https://10.33.40.25:6443
clusterPodNets:
  - "10.69.0.0/16"
  - "${CLUSTER_POD_V6_CIDR}"
clusterSvcNets:
  - "10.96.0.0/16"
  - "${CLUSTER_SVC_V6_CIDR}"
additionalApiServerCertSans: &sans
  - "10.33.40.25"
  - 127.0.0.1 # KubePrism
  - "talos-maxi.franta.us"
additionalMachineCertSans: *sans
cniConfig:
  name: none

nodes:
  - hostname: "talos-actinium"
    ipAddress: "10.33.35.1"
    installDisk: "/dev/sda"
    talosImageURL: factory.talos.dev/installer/a7bcadbc1b6d03c0e687be3a5d9789ef7113362a6a1a038653dfd16283a92b6b
    controlPlane: true
    nodeLabels:
      topology.kubernetes.io/region: *cluster
      topology.kubernetes.io/zone: actinium
    networkInterfaces:
      - interface: eth0
        dhcp: true
        mtu: 1500
        vip:
          ip: "10.33.40.25"
  - hostname: "talos-thorium"
    ipAddress: "10.33.35.2"
    installDisk: "/dev/sda"
    talosImageURL: factory.talos.dev/installer/a7bcadbc1b6d03c0e687be3a5d9789ef7113362a6a1a038653dfd16283a92b6b
    controlPlane: true
    nodeLabels:
      topology.kubernetes.io/region: *cluster
      topology.kubernetes.io/zone: thorium
    networkInterfaces:
      - interface: eth0
        dhcp: true
        mtu: 1500
        vip:
          ip: "10.33.40.25"
  - hostname: "talos-protactinium"
    ipAddress: "10.33.35.3"
    installDisk: "/dev/sda"
    talosImageURL: factory.talos.dev/installer/a7bcadbc1b6d03c0e687be3a5d9789ef7113362a6a1a038653dfd16283a92b6b
    controlPlane: true
    nodeLabels:
      topology.kubernetes.io/region: *cluster
      topology.kubernetes.io/zone: protactinium
    networkInterfaces:
      - interface: eth0
        dhcp: true
        mtu: 1500
        vip:
          ip: "10.33.40.25"
  - hostname: "talos-actinium-agent"
    ipAddress: "10.33.35.11"
    installDisk: "/dev/sda"
    talosImageURL: factory.talos.dev/installer/a7bcadbc1b6d03c0e687be3a5d9789ef7113362a6a1a038653dfd16283a92b6b
    controlPlane: false
    nodeLabels:
      topology.kubernetes.io/region: *cluster
      topology.kubernetes.io/zone: actinium
    networkInterfaces:
      - interface: eth0
        dhcp: true
        mtu: 1500
  - hostname: "talos-thorium-agent"
    ipAddress: "10.33.35.12"
    installDisk: "/dev/sda"
    talosImageURL: factory.talos.dev/installer/a7bcadbc1b6d03c0e687be3a5d9789ef7113362a6a1a038653dfd16283a92b6b
    controlPlane: false
    nodeLabels:
      topology.kubernetes.io/region: *cluster
      topology.kubernetes.io/zone: thorium
    networkInterfaces:
      - interface: eth0
        dhcp: true
        mtu: 1500
  - hostname: "talos-protactinium-agent"
    ipAddress: "10.33.35.13"
    installDisk: "/dev/sda"
    talosImageURL: factory.talos.dev/installer/a7bcadbc1b6d03c0e687be3a5d9789ef7113362a6a1a038653dfd16283a92b6b
    controlPlane: false
    nodeLabels:
      topology.kubernetes.io/region: *cluster
      topology.kubernetes.io/zone: protactinium
    networkInterfaces:
      - interface: eth0
        dhcp: true
        mtu: 1500
  - hostname: "talos-g3-mini"
    ipAddress: "10.33.35.21"
    installDiskSelector:
      model: "SK hynix*"
    talosImageURL: factory.talos.dev/installer/0b13754612577000b1d6a89683e002ba41efbc0a57c91d29be8da96a0dfd8a6f
    controlPlane: false
    nodeLabels:
      topology.kubernetes.io/region: *cluster
      # topology.kubernetes.io/zone: nonProxmox
    # nodeTaints:
    #   intel-gpu: true:NoSchedule
    networkInterfaces:
      - interface: eno1
        # deviceSelector:
        #   hardwareAddr: "10:62:e5:18:1a:2e"
        dhcp: true
        # addresses:
        #   - "10.33.35.21/16"
        # mtu: 1500
        # routes:
        #   - network: 0.0.0.0/0
        #     gateway: "10.33.0.1"
        vlans:
          - vlanId: 20
            mtu: 1500
            dhcp: true
            dhcpOptions:
              routeMetric: 4096
          - vlanId: 50
            mtu: 1500
            addresses:
              - "10.0.50.21/24"
            # dhcp: true
            # dhcpOptions:
            #   routeMetric: 4096
    patches:
    # Configure udev rules
      - |-
        machine:
          udev:
            rules:
              # Intel GPU
              - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
              # Coral Edge M.2 TPU
              - SUBSYSTEM=="apex", KERNEL=="apex*", GROUP="44", MODE="0660"
      # - |-
      #   machine:
      #     kubelet:
      #       extraConfig:
      #         registerWithTaints:
      #           intel-gpu: true:NoSchedule

patches:
  # Configure containerd
  - |-
    machine:
      files:
        - op: create
          path: /etc/cri/conf.d/20-customization.part
          content: |-
            [plugins."io.containerd.cri.v1.images"]
              discard_unpacked_layers = false
            [plugins."io.containerd.grpc.v1.cri"]
              enable_unprivileged_ports = true
              enable_unprivileged_icmp = true
            [plugins."io.containerd.grpc.v1.cri".containerd]
              discard_unpacked_layers = false
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
              discard_unpacked_layers = false

  # Disable search domain everywhere
  - |-
    machine:
      network:
        disableSearchDomain: true

  # Enable cluster discovery
  - |-
    cluster:
      discovery:
        registries:
          kubernetes:
            disabled: true
          service:
            disabled: false

  # Enable MutatingAdmissionPolicy
  - |-
    cluster:
      apiServer:
        extraArgs:
          runtime-config: admissionregistration.k8s.io/v1alpha1=true
          feature-gates: MutatingAdmissionPolicy=true

  # Configure kubelet
  - |-
    machine:
      kubelet:
        extraArgs:
          rotate-server-certificates: true
        nodeIP:
          validSubnets: ["10.33.35.0/27", "${CLUSTER_NODE_V6_CIDR}"]

  # Force nameserver
  - |-
    machine:
      network:
        nameservers:
          - 10.33.10.0
          - 10.33.10.1
          - ${DNS_IPV6_0}
          - ${DNS_IPV6_1}
        extraHostEntries:
          - ip: ${UPTIME_IP_V4}
            aliases:
              - uptime.${CLOUD_DOMAIN}

  # Enable Host DNS: https://www.talos.dev/v1.7/talos-guides/network/host-dns/
  - |-
    machine:
      features:
        hostDNS:
          enabled: true
          resolveMemberNames: true
          # Incompatible with Cilium bpf masquerade. siderolabs/talos/#8836
          forwardKubeDNSToHost: false

  # Configure NTP
  - |-
    machine:
      time:
        disabled: false
        servers: ["10.33.0.1", "192.168.247.254"]

  # Custom sysctl settings
  - |-
    machine:
      sysctls:
        fs.inotify.max_queued_events: "65536"
        fs.inotify.max_user_watches: "524288"
        fs.inotify.max_user_instances: "8192"
        net.core.default_qdisc: fq
        net.core.rmem_max: 67108864            # Cloudflared / QUIC
        net.core.wmem_max: 67108864            # Cloudflared / QUIC
        net.core.bpf_jit_harden: "1"
        net.ipv4.tcp_congestion_control: bbr
        net.ipv4.tcp_fastopen: 3 # Send and accept data in the opening SYN packet
        # net.ipv4.tcp_mtu_probing: 1 # Jumbo frames
        net.ipv6.conf.all.accept_ra: "2"
        net.ipv6.conf.all.forwarding: "1"
        net.ipv4.tcp_rmem: 4096 131072 33554432  # 1K, 128K, 32M; QUIC and 10 Gbps
        net.ipv4.tcp_wmem: 4096 131072 33554432  # 1K, 128K, 32M; QUIC and 10 Gbps
        vm.nr_hugepages: "1024"

  - |-
    machine:
      kernel:
        modules:
          - name: nbd
  # Mount openebs-hostpath in kubelet
  - |-
    machine:
      kubelet:
        extraMounts:
          - destination: /var/openebs/local
            type: bind
            source: /var/openebs/local
            options: ["bind", "rshared", "rw"]

controlPlane:
  patches:
    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnControlPlanes: false
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
            node-cidr-mask-size-ipv6: "112"
        coreDNS:
          disabled: true
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0

    # ETCD configuration
    - |-
      cluster:
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
          advertisedSubnets:
            - "10.33.35.0/27"

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Configure nfs mount options
    - |-
      machine:
        files:
          - op: overwrite
            path: /etc/nfsmount.conf
            permissions: 0o644
            content: |
              [ NFSMount_Global_Options ]
              nfsvers=4.2
              hard=True
              noatime=True
              nodiratime=True
              rsize=131072
              wsize=131072
              nconnect=8
    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles: ["os:admin"]
            allowedKubernetesNamespaces: ["system-upgrade", "actions-runner-system"]
