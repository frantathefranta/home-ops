# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
---
# renovate: datasource=docker depName=ghcr.io/siderolabs/installer
talosVersion: v1.7.5
# renovate: datasource=docker depName=ghcr.io/siderolabs/kubelet
kubernetesVersion: v1.30.2

clusterName: &cluster talos-maxi
endpoint: https://10.33.40.25:6443
clusterPodNets:
  - "10.69.0.0/16"
clusterSvcNets:
  - "10.96.0.0/16"
additionalApiServerCertSans: &sans
  - "10.33.40.25"
  - 127.0.0.1 # KubePrism
  - "talos-maxi.franta.us"
additionalMachineCertSans: *sans
cniConfig:
  name: none

nodes:
  - hostname: "talos-actinium"
    ipAddress: "10.33.35.1"
    installDisk: "/dev/sda"
    talosImageURL: factory.talos.dev/installer/a7bcadbc1b6d03c0e687be3a5d9789ef7113362a6a1a038653dfd16283a92b6b
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "bc:24:11:22:55:36"
        dhcp: false
        addresses:
          - "10.33.35.1/16"
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: "10.33.0.1"
        vip:
          ip: "10.33.40.25"
  - hostname: "talos-thorium"
    ipAddress: "10.33.35.2"
    installDisk: "/dev/sda"
    talosImageURL: factory.talos.dev/installer/a7bcadbc1b6d03c0e687be3a5d9789ef7113362a6a1a038653dfd16283a92b6b
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "bc:24:11:c6:17:fe"
        dhcp: false
        addresses:
          - "10.33.35.2/16"
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: "10.33.0.1"
        vip:
          ip: "10.33.40.25"
  - hostname: "talos-protactinium"
    ipAddress: "10.33.35.3"
    installDisk: "/dev/sda"
    talosImageURL: factory.talos.dev/installer/a7bcadbc1b6d03c0e687be3a5d9789ef7113362a6a1a038653dfd16283a92b6b
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "bc:24:11:8b:fc:be"
        dhcp: false
        addresses:
          - "10.33.35.3/16"
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: "10.33.0.1"
        vip:
          ip: "10.33.40.25"

patches:
  # Configure containerd
  - |-
    machine:
      files:
        - op: create
          path: /etc/cri/conf.d/20-customization.part
          content: |-
            [plugins."io.containerd.grpc.v1.cri"]
              enable_unprivileged_ports = true
              enable_unprivileged_icmp = true
            [plugins."io.containerd.grpc.v1.cri".containerd]
              discard_unpacked_layers = false
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
              discard_unpacked_layers = false

  # Disable search domain everywhere
  - |-
    machine:
      network:
        disableSearchDomain: true

  # Enable cluster discovery
  - |-
    cluster:
      discovery:
        registries:
          kubernetes:
            disabled: false
          service:
            disabled: false

  # Configure kubelet
  - |-
    machine:
      kubelet:
        extraArgs:
          rotate-server-certificates: true
        nodeIP:
          validSubnets: ["10.33.0.0/16"]

  # Force nameserver
  - |-
    machine:
      network:
        nameservers:
          - 10.0.30.53

  # Configure NTP
  - |-
    machine:
      time:
        disabled: false
        servers: ["10.33.0.1"]

  # Custom sysctl settings
  - |-
    machine:
      sysctls:
        fs.inotify.max_queued_events: "65536"
        fs.inotify.max_user_watches: "524288"
        fs.inotify.max_user_instances: "8192"
        net.core.rmem_max: "2500000"
        net.core.wmem_max: "2500000"

  # Mount openebs-hostpath in kubelet
  - |-
    machine:
      kubelet:
        extraMounts:
          - destination: /var/openebs/local
            type: bind
            source: /var/openebs/local
            options: ["bind", "rshared", "rw"]

  # Mount longhorn in kubelet
  # - |-
  #   machine:
  #     kubelet:
  #       extraMounts:
  #         - destination: /var/lib/longhorn
  #           type: bind
  #           source: /var/lib/longhorn
  #           options: ["bind", "rshared", "rw"]
controlPlane:
  patches:
    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnControlPlanes: true
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0

    # ETCD configuration
    - |-
      cluster:
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
          advertisedSubnets:
            - "10.33.0.0/16"

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles: ["os:admin"]
            allowedKubernetesNamespaces: ["system-upgrade"]
